{"version":3,"sources":["server.js"],"names":["dotenv","config","path","app","use","bodyParser","json","userRouter","donationRouter","req","res","status","send","message","databaseUrl","process","env","DATABASE","mongoose","connect","useNewUrlParser","useCreateIndex","useUnifiedTopology","useFindAndModify","then","console","log","port","PORT","listen"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAIAA,mBAAOC,MAAP,CAAc;AAACC,EAAAA,IAAI,EAAC;AAAN,CAAd;;AAEA,IAAMC,GAAG,GAAC,0BAAV;AAEAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AACAD,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQ,oBAAR,EAA6BG,qBAA7B;AACAJ,GAAG,CAACC,GAAJ,CAAQ,wBAAR,EAAkCI,yBAAlC;AACAL,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAY,UAACK,GAAD,EAAKC,GAAL,EAAW;AACnBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACrBD,IAAAA,MAAM,EAAC,GADc;AAErBE,IAAAA,OAAO,EAAC;AAFa,GAArB;AAIH,CALD;AASA,IAAMC,WAAW,GAACC,OAAO,CAACC,GAAR,CAAYC,QAA9B;;AACAC,qBAASC,OAAT,CAAiBL,WAAjB,EAA6B;AAACM,EAAAA,eAAe,EAAE,IAAlB;AAAuBC,EAAAA,cAAc,EAAC,IAAtC;AAA2CC,EAAAA,kBAAkB,EAAC,IAA9D;AAAmEC,EAAAA,gBAAgB,EAAE;AAArF,CAA7B,EAA0HC,IAA1H,CAA+H;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAY,gCAAZ,CAAJ;AAAA,CAA/H;;AAEA,IAAMC,IAAI,GAAEZ,OAAO,CAACC,GAAR,CAAYY,IAAxB;AACAzB,GAAG,CAAC0B,MAAJ,CAAWF,IAAX,EAAgB,YAAI;AAEhBF,EAAAA,OAAO,CAACC,GAAR,qCAAyCC,IAAzC;AACH,CAHD;eAKexB,G","sourcesContent":["import express from \"express\";\r\nimport mongoose from \"mongoose\";\r\nimport dotenv from \"dotenv\";\r\nimport userRouter from \"./Server/Routes/userRoute\";\r\nimport bodyParser from \"body-parser\";\r\nimport donationRouter from \"./Server/Routes/donationRoute\";\r\nimport cors from \"cors\";\r\n\r\n\r\n\r\ndotenv.config({path:'./.env'});\r\n\r\nconst app=express();\r\n\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\napp.use(\"/bloodbank/v1/user\",userRouter);\r\napp.use(\"/bloodbank/v1/donation\", donationRouter);\r\napp.use('/',(req,res)=>{\r\n    res.status(404).send({\r\n    status:404,\r\n    message:\"This Route does not exist\"\r\n})\r\n})\r\n\r\n\r\n\r\nconst databaseUrl=process.env.DATABASE;\r\nmongoose.connect(databaseUrl,{useNewUrlParser: true,useCreateIndex:true,useUnifiedTopology:true,useFindAndModify: false}).then(()=>console.log(\"Database connected sucessfully\"));\r\n\r\nconst port= process.env.PORT;\r\napp.listen(port,()=>{\r\n\r\n    console.log(`Server is running on port ${port}`);\r\n})\r\n\r\nexport default app;"],"file":"server.dev.js"}